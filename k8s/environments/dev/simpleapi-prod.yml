apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: simpleapi-prod
  namespace: api
  labels:
    app: simpleapi-prod
spec:
  selector:
    matchLabels:
      app: simpleapi-prod # has to match .spec.template.metadata.labels
  revisionHistoryLimit: 1 
  #replicas: 4
  strategy:
    canary:
      stableService: simpleapi-prod-stable-service
      canaryService: simpleapi-prod-canary-service
      trafficRouting:
# #        managedRoutes:
#           #- name: version-header
        # nginx:
        #   stableIngress: simpleapi-prod-ingress # required
#        # istio:
#        #   virtualService:
#        #     name: simpleapi-vsvc   # required          
      steps:
#         # - setWeight: 20
#         # - setHeaderRoute: # enable header based traffic routing where
#         #     name: "set-header-1"
#         #     match:
#         #     - headerName: ApiVersion # Custom-Header1=Mozilla
#         #       headerValue:
#         #         exact: 2.0.0 #headerValue- contains exactly one of exact - specify the exact header value, regex - value in a regex format, prefix - the prefix of the value could be provided. Not all traffic routers will support all match types.
        - setWeight: 50
        - pause: {}
        - setWeight: 60
        - pause: { duration: 10 }
        - setWeight: 80
        - pause: { duration: 10 }      
  template:
    metadata:
      labels:
        app: simpleapi-prod # has to match .spec.selector.matchLabels        
    spec:
      containers:
        - name: simpleapi
          image: niazovd/api:v2
          imagePullPolicy: Always
          ports:
            - containerPort: 80
          env: 
            - name: MESSAGE
              value: "PROD: Hello SRP Devcon 2023"
---
apiVersion: v1
kind: Service
metadata:
  name: simpleapi-prod-stable-service
  namespace: api
spec:
  type: ClusterIP
  selector:
    app: simpleapi-prod
  ports:
    - port: 80 #This port is the port which belongs to ClusterIP which will be exposed
      targetPort: 80 #This port should match with the port application is targetting in this case: containerPort: 8002.
      protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: simpleapi-prod-canary-service
  namespace: api
spec:
  type: ClusterIP
  selector:
    app: simpleapi-prod
  ports:
    - port: 80 #This port is the port which belongs to ClusterIP which will be exposed
      targetPort: 80 #This port should match with the port application is targetting in this case: containerPort: 8002.
      protocol: TCP      
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: simpleapi-prod-vsvc
  namespace: api
spec:
  hosts:
    - 'simpleapi.prod'
  gateways:
    - gateway
  http:
    - route:
        - destination:
            host: simpleapi-prod-stable-service.api.svc.cluster.local
            port:
              number: 80
# ---
# #The Ingress rules, must reside in the namespace where the app that they configure reside in this case it's in back-end
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: simpleapi-prod-ingress
#   namespace: api
#   annotations:
#     kubernetes.io/ingress.class: nginx
#     kubernetes.io/ingress.allow-http: "false"
#     nginx.ingress.kubernetes.io/use-regex: "true"
#     nginx.ingress.kubernetes.io/affinity: "cookie"
#     nginx.ingress.kubernetes.io/affinity-mode: persistent
#     nginx.ingress.kubernetes.io/session-cookie-expires: "172800"
#     nginx.ingress.kubernetes.io/session-cookie-max-age: "172800"
#     nginx.ingress.kubernetes.io/proxy-connect-timeout: "360"
#     nginx.ingress.kubernetes.io/proxy-send-timeout: "360"
#     nginx.ingress.kubernetes.io/proxy-read-timeout: "360"
# spec:
#   rules:
#     - host: api.20.219.235.7.nip.io
#       http:
#         paths:
#           - pathType: Prefix
#             path: /
#             backend:
#               service:
#                 name: simpleapi-prod-stable-service
#                 port:
#                   number: 80
                        

