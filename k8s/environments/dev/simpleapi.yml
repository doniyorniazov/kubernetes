apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: simpleapi
  namespace: api
  labels:
    app: simpleapi
spec:
  selector:
    matchLabels:
      app: simpleapi # has to match .spec.template.metadata.labels
  revisionHistoryLimit: 1    
  #replicas: 4
  strategy:
    canary:
      stableService: simpleapi-stable
      canaryService: simpleapi-canary
      trafficRouting:
        managedRoutes:
          - name: version-header
        nginx:
          stableIngress: simpleapi-ingress # required
        #  annotationPrefix: customingress.nginx.ingress.kubernetes.io # optional
        #  additionalIngressAnnotations: # optional
        #    canary-by-header: X-Canary
        #    canary-by-header-value: iwantsit
      steps:
    #    - setWeight: 20
        #- setHeaderRoute: # enable header based traffic routing where
        #   name: "version-header"
        #    match:
        #    - headerName: version # Custom-Header1=Mozilla
        #      headerValue:
        #        exact: 1.0.0
        ##    - headerName: version # or Custom-Header2 has a prefix Mozilla
          #    headerValue:
          #      prefix: 1.0.0
          #  - headerName: version # or Custom-Header3 value match regex: Mozilla(.*)
          #    headerValue:
          #      regex: 1.0.0(.*)      
        - setWeight: 50
        - pause: {}
        - setWeight: 60
        - pause: { duration: 10 }
        - setWeight: 80
        - pause: { duration: 10 }      
  template:
    metadata:
      labels:
        app: simpleapi # has to match .spec.selector.matchLabels        
    spec:
      containers:
        - name: simpleapi
          image: niazovd/api:v2
          imagePullPolicy: Always
          ports:
            - containerPort: 80
          env: 
            - name: MESSAGE
              value: "Hello SRP Devcon 2023"
---
apiVersion: v1
kind: Service
metadata:
  name: simpleapi-canary-service
  namespace: api
spec:
  type: ClusterIP
  selector:
    app: simpleapi
  ports:
    - port: 80 #This port is the port which belongs to ClusterIP which will be exposed
      targetPort: 80 #This port should match with the port application is targetting in this case: containerPort: 8002.
      protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: simpleapi-stable-service
  namespace: api
spec:
  type: ClusterIP
  selector:
    app: simpleapi
  ports:
    - port: 80 #This port is the port which belongs to ClusterIP which will be exposed
      targetPort: 80 #This port should match with the port application is targetting in this case: containerPort: 8002.
      protocol: TCP
---
apiVersion: networking.k8s.io/v1alpha3
kind: Gateway
metadata:
  name: gateway
  namespace: api
spec:
  selector:
    istio: ingressgateway
  servers:
    - port:
        number: 80
        name: http
        protocol: HTTP
      host: 
        - "api"
# ---
# apiVersion: networking.istio.io/v1alpha3
# kind: VirtualService
# metadata: 
#   name: simpleapi
#   namespace: api
# spec: 
#   hosts:
#     - 'api'
#   gateways:
#     - gateway
#   http: 
#     - route:
#       - destination:
#           host: simpleapi-stable-service.api.svc.cluster.local
#           port: 
#             number: 80
---
#The Ingress rules, must reside in the namespace where the app that they configure reside in this case it's in back-end
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: simpleapi-ingress
  namespace: api
  annotations:
    kubernetes.io/ingress.class: nginx
    kubernetes.io/ingress.allow-http: "false"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/affinity: "cookie"
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/session-cookie-expires: "172800"
    nginx.ingress.kubernetes.io/session-cookie-max-age: "172800"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "360"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "360"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "360"
spec:
  rules:
    - host: api.20.219.235.7.nip.io
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: simpleapi-stable
                port:
                  number: 80
            

